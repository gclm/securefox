name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release'
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # Call the reusable build workflow
  build:
    name: Build All Platforms
    uses: ./.github/workflows/build.yml
    with:
      upload-artifacts: true
      retention-days: 90

  create-release:
    name: Create Release
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Organize artifacts
        run: |
          mkdir -p release
          find artifacts -type f \( -name "*.tar.gz" -o -name "*.zip" -o -name "*.sha256" \) -exec mv {} release/ \;
          ls -lah release/

      - name: Get tag name
        id: tag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "tag=${{ inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Generate release notes
        id: notes
        run: |
          TAG="${{ steps.tag.outputs.tag }}"
          echo "## SecureFox ${TAG}" > release_notes.md
          echo "" >> release_notes.md
          echo "### ðŸš€ Downloads" >> release_notes.md
          echo "" >> release_notes.md
          echo "#### CLI Binaries" >> release_notes.md
          echo "" >> release_notes.md
          echo "- **macOS**" >> release_notes.md
          echo "  - [Intel (x64)](https://github.com/${{ github.repository }}/releases/download/${TAG}/securefox-macos-x64.tar.gz)" >> release_notes.md
          echo "  - [Apple Silicon (ARM64)](https://github.com/${{ github.repository }}/releases/download/${TAG}/securefox-macos-arm64.tar.gz)" >> release_notes.md
          echo "- **Linux**" >> release_notes.md
          echo "  - [x64](https://github.com/${{ github.repository }}/releases/download/${TAG}/securefox-linux-x64.tar.gz)" >> release_notes.md
          echo "  - [ARM64](https://github.com/${{ github.repository }}/releases/download/${TAG}/securefox-linux-arm64.tar.gz)" >> release_notes.md
          echo "- **Windows**" >> release_notes.md
          echo "  - [x64](https://github.com/${{ github.repository }}/releases/download/${TAG}/securefox-windows-x64.zip)" >> release_notes.md
          echo "" >> release_notes.md
          echo "#### Browser Extensions" >> release_notes.md
          echo "" >> release_notes.md
          echo "- [Chrome Extension](https://github.com/${{ github.repository }}/releases/download/${TAG}/securefox-extension-chrome.zip)" >> release_notes.md
          echo "- [Firefox Extension](https://github.com/${{ github.repository }}/releases/download/${TAG}/securefox-extension-firefox.zip)" >> release_notes.md
          echo "" >> release_notes.md
          echo "### ðŸ“¦ Installation" >> release_notes.md
          echo "" >> release_notes.md
          echo "\`\`\`bash" >> release_notes.md
          echo "# macOS / Linux" >> release_notes.md
          echo "tar -xzf securefox-*.tar.gz" >> release_notes.md
          echo "sudo mv securefox /usr/local/bin/" >> release_notes.md
          echo "securefox version" >> release_notes.md
          echo "\`\`\`" >> release_notes.md
          echo "" >> release_notes.md
          echo "### âœ¨ What's Changed" >> release_notes.md
          echo "" >> release_notes.md
          echo "See commit history for details." >> release_notes.md
          cat release_notes.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: SecureFox ${{ steps.tag.outputs.tag }}
          body_path: release_notes.md
          files: release/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
